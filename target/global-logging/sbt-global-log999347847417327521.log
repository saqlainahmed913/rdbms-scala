[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\greyn\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\greyn\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 1.8.0_281)
[debug]       Load.loadUnit: plugins took 294.6602ms
[debug]       Load.loadUnit: defsScala took 0.698299ms
[debug] [Loading] Scanning directory C:\Users\greyn\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\greyn\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 58.8063 ms
[debug]           Load.resolveProject(global-plugins) took 132.1702ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\greyn\.sbt\1.0\plugins, plugins: List(<none>))) took 244.4992ms
[debug] [Loading] Done in C:\Users\greyn\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 332.5295ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.530001ms
[debug]     Load.loadUnit(file:/C:/Users/greyn/.sbt/1.0/plugins/, ...) took 645.643501ms
[debug]   Load.apply: load took 1319.8477ms
[debug]   Load.apply: resolveProjects took 19.304301ms
[debug]   Load.apply: finalTransforms took 221.4771ms
[debug]   Load.apply: config.delegates took 57.0727ms
[debug]   Load.apply: Def.make(settings)... took 7158.323799ms
[debug]   Load.apply: structureIndex took 356.8936ms
[debug]   Load.apply: mkStreams took 3.289099ms
[info] loading global plugins from C:\Users\greyn\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 20564.6499ms
[debug]           Load.loadUnit: plugins took 65.1294ms
[debug]           Load.loadUnit: defsScala took 0.0127ms
[debug] [Loading] Scanning directory C:\Users\greyn\IdeaProjects\DB-Project\project
[debug]             Load.loadUnit: mkEval took 19.774001ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\greyn\IdeaProjects\DB-Project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.967201 ms
[info] loading settings for project db-project-build from idea.sbt ...
[debug]               Load.resolveProject(db-project-build) took 7.6691ms
[debug]             Load.loadTransitive: finalizeProject(Project(id db-project-build, base: C:\Users\greyn\IdeaProjects\DB-Project\project, plugins: List(<none>))) took 13.8082ms
[debug] [Loading] Done in C:\Users\greyn\IdeaProjects\DB-Project\project, returning: (db-project-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 686.0032ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.2588ms
[debug]         Load.loadUnit(file:/C:/Users/greyn/IdeaProjects/DB-Project/project/, ...) took 760.725ms
[debug]       Load.apply: load took 763.2011ms
[debug]       Load.apply: resolveProjects took 0.1732ms
[debug]       Load.apply: finalTransforms took 29.3252ms
[debug]       Load.apply: config.delegates took 0.6343ms
[debug]       Load.apply: Def.make(settings)... took 297.4919ms
[debug]       Load.apply: structureIndex took 69.619701ms
[debug]       Load.apply: mkStreams took 0.004001ms
[info] loading project definition from C:\Users\greyn\IdeaProjects\DB-Project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3165.2925ms
[debug]     Load.loadUnit: defsScala took 0.0071ms
[debug] [Loading] Scanning directory C:\Users\greyn\IdeaProjects\DB-Project
[debug]       Load.loadUnit: mkEval took 0.6827ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\greyn\IdeaProjects\DB-Project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.4157 ms
[info] loading settings for project db-project from build.sbt ...
[debug]         Load.resolveProject(db-project) took 52.7621ms
[debug]       Load.loadTransitive: finalizeProject(Project(id db-project, base: C:\Users\greyn\IdeaProjects\DB-Project, plugins: List(<none>))) took 59.329201ms
[debug] [Loading] Done in C:\Users\greyn\IdeaProjects\DB-Project, returning: (db-project)
[debug]     Load.loadUnit: loadedProjectsRaw took 234.0909ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.030901ms
[debug]   Load.loadUnit(file:/C:/Users/greyn/IdeaProjects/DB-Project/, ...) took 3408.5792ms
[debug] Load.apply: load took 3410.9062ms
[debug] Load.apply: resolveProjects took 0.149001ms
[debug] Load.apply: finalTransforms took 40.2897ms
[debug] Load.apply: config.delegates took 0.545499ms
[debug] Load.apply: Def.make(settings)... took 137.896601ms
[debug] Load.apply: structureIndex took 38.5905ms
[debug] Load.apply: mkStreams took 0.003ms
[info] set current project to DB-Project (in build file:/C:/Users/greyn/IdeaProjects/DB-Project/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53869 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53869, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to DB-Project (in build file:/C:/Users/greyn/IdeaProjects/DB-Project/)
[debug] > Exec(idea-shell, None, None)
